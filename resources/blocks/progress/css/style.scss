////
/// Block stylesheet.
///
/// @author Justin Tadlock <justintadlock@gmail.com>
/// @link   https://github.com/x3p0-dev/x3p0-progress
////

/// One ginormous container class to rule over everything. This is actually the
/// outer wrapper for the block itself. All element classes are namespaced using
/// the `.wp-block-x3p0-progress__` prefix, BEM style. Modifiers do not follow
/// the same style.  Typically, utility classes, such as `.is-*` and `.has-*`
/// are used instead.
.wp-block-x3p0-progress {

	// Set up some default custom properties.  Theme authors can overrule
	// these via `settings.custom.x3p0/progress.{name}` in their `theme.json`
	// files.  Don't blame me for the crazy hyphens. That's all on WP for
	// hyphenating numbers + letters instead of by letter case.  Regardless,
	// I'm fixing it in the actual CSS here so that it's somewhat readable.

	// Set progress bar height via `settings.x3p0Progress.height`.
	--x3p0-progress--height: var(--wp--custom--x-3-p-0-progress--height, 1.5rem);

	// Set the label's `justify-content` via `settings.x3p0Progress.justifyLabel`.
	--x3p0-progress--justify-label: var(
		--wp--custom--x-3-p-0-progress--justify-label,
		left
	);

	// Set a foreground color via `settings.x3p0Progress.foregroundColor`.
	--x3p0-progress--foreground-color: var(
		--wp--custom--x-3-p-0-progress--color--foreground,
		var(--wp--preset--color--primary, var(--wp--preset--color--vivid-cyan-blue))
	);

	// Set a background color via `settings.x3p0Progress.backgroundColor`.
	--x3p0-progress--background-color: var(
		--wp--custom--x-3-p-0-progress--color--background,
		var(--wp--preset--color--secondary, var(--wp--preset--color--pale-cyan-blue))
	);

	// Set foreground gradient via `settings.x3p0Progress.foregroundGradient`.
	--x3p0-progress--foreground-gradient: var(
		--wp--custom--x-3-p-0-progress--foreground-gradient,
		none
	);

	// Set foreground gradient via `settings.x3p0Progress.backgroundGradient`.
	--x3p0-progress--background-gradient: var(
		--wp--custom--x-3-p-0-progress--background-gradient,
		none
	);

	// Border-box FTW! üèÜ
	box-sizing: border-box;

	// Fall back for themes where there is no consistent gap/margin between
	// elements. This is about the best we can do.
	margin-top: var(--wp--style--block-gap, 2em);

	// =====================================================================
	// Label styles.
	// =====================================================================

	// Styles for the `<label>` element. This element houses the label text,
	// progress number, and goal number.
	&__label {
		display: flex;
		width: 100%;
		flex-wrap: wrap;
		align-items: flex-end;

		// Add a gap of a single character to replicate a natural space.
		gap: 1ch;

		// Justify the label content.
		justify-content: var(--x3p0-progress--justify-label);

		&.justify-left    { --x3p0-progress--justify-label: left;          }
		&.justify-center  { --x3p0-progress--justify-label: center;        }
		&.justify-right   { --x3p0-progress--justify-label: right;         }
		&.justify-between { --x3p0-progress--justify-label: space-between; }

		// Inner wrapper for label text. Unstyled by default and listed
		// here for reference.
		// &-text {}

		// Wrapper for the progress and goal numbers in the label. One,
		// both, or neither of the inner elements may be shown, depending
		// on the user's choice.
		&-num {
			display: flex;
			flex-wrap: nowrap;
			gap: 1ch;
		}

		// Progress, separator, and goal classes. Unstyled by default
		// and listed here for reference.
		// &-progress {}
		// &-sep {}
		// &-goal {}
	}

	// Inherit text color if one is set.
	&.has-text-color &__label {
		color: inherit;
	}

	// =====================================================================
	// Progress bar (and its wrapping container) styles.
	// =====================================================================

	// Wrapper `<div>` for the `<progress>` element. The extra wrapper
	// gives us more flexibility for custom styles. Also, the user-supplied
	// border (or `theme.json`-supplied) is added to this element instead of
	// the block wrapper.
	&__container {
		box-sizing: border-box;
		width: 100%;
		overflow: hidden;
	}

	// Handling for the `<progress>` element. It's probably best not to muck
	// around with most of these values. Fire, smoke, and dragons lie ahead.
	// I've already walked through the fire and smoke to eventually slay the
	// beast at the end. But, hey, if there's a better cross-browser way of
	// handling this, let me know.
	&__bar {
		// Kill browsers' default handling for this.
		-webkit-appearance: none;
		   -moz-appearance: none;
		        appearance: none;

		// Finally getting to the actual fun part of the CSS for our
		// beloved `<progress>` element. *Maybe.*
		display: block;
		overflow: hidden;
		width: 100%;
		height: var(--x3p0-progress--height);
		background-color: var(--x3p0-progress--background-color);
		background-image: var(--x3p0-progress--background-gradient);
		border-radius: inherit;

		// Remove border from Firefox that's left over, despite setting
		// the above `appearance` property.
		border: none;

		// Possibly works in IE for the foreground color. Not bothering
		// to actually check this because I value my sanity too much to
		// ever install IE again.
		color: var(--x3p0-progress--foreground-color);

		// Wrapper element for the bar and value pseudo elements in
		// webkit browsers. We need this so that border-radius
		// inheritance trickles down the stack.
		&::-webkit-progress-inner-element {
			border-radius: inherit;
		}

		// This is the background pseudo element for webkit browsers.
		// We're actually going to kill this since Firefox doesn't have
		// an equivalent pseudo-element. Instead, it lets the `<progress>`
		// element itself take this role. The easiest solution is to
		// treat all browsers the same in this regard (i.e., use the
		// method employed by Firefox).
		&::-webkit-progress-bar {
			background: transparent;
			border-radius: inherit;
		}

		// This is the foreground pseudo element for webkit browsers.
		// Note that this must be kept separate from the following
		// code for `::moz-progress-bar`. Otherwise, it breaks in Edge,
		// leaving the value at the default green color.
		&::-webkit-progress-value {
			height: 100%;
			display: block;
			background-color: var(--x3p0-progress--foreground-color);
			background-image: var(--x3p0-progress--foreground-gradient);
			border-radius: inherit;
		}

		// Foreground pseudo element for Firefox.
		&::-moz-progress-bar {
			height: 100%;
			display: block;
			background-color: var(--x3p0-progress--foreground-color);
			background-image: var(--x3p0-progress--foreground-gradient);
			border-radius: inherit;
		}
	}

	// =====================================================================
	// Layout styles.
	// =====================================================================

	// Reversed flex layout. All this does is flip the order of the
	// `<label>` and `<progress>` element, at least visually. In reality,
	// the markup stays the same.
	&.is-reversed {
		flex-direction: column-reverse;

		.wp-block-x3p0-progress__label {
			align-items: flex-start;
		}
	}
}
